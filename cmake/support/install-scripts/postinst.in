#!/bin/bash

# Extract CMake macros during configure
PREFIX="@CMAKE_INSTALL_PREFIX@"
FLAVOR="@FLAVOR@"
VERSION="@MCCODE_VERSION@"
MC="@MCCODE_PREFIX@"
NO_ALTERNATIVES="@NO_ALTERNATIVES@"

# Include installation path before any attempt to postconfig
export PATH=${PREFIX}/${FLAVOR}/${VERSION}/bin:${PATH}
MCCODE=${FLAVOR}

# Function to check if link exists, then remove it
function checklinkrm {
    if [ -h $1 ]; then
	echo Removing link $1
	rm $1
    fi
}

# Function probing / removing old links
function checklinks {
    # - Check for possibly existing links in /usr/local/bin and remove them...
        # McCode itself
    checklinkrm /usr/local/bin/@FLAVOR@
        # mcrun variants
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@run
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@run-py
	# mcgui variants
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@gui
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@gui-py
	# mcplot 
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@plot
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@plot-chaco-py
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@plot-matplotlib-py
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@plot-matlab
	# mcdisplay
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@display
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@display-py
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@display-x3d-py
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@display-matplotlib-py
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@display-vtk-py
        # other stuff
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@daemon
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@doc
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@format
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@formatgui
    checklinkrm /usr/local/bin/@MCCODE_PREFIX@resplot
    checklinkrm /usr/local/bin/@FLAVOR@tovitess
}


# If this Unix has "modulefiles" installed in /etc, dump environment config there,
# else a simple set of links will do...
if [ -d /etc/modulefiles ]; 
then
    mkdir -p /etc/modulefiles/${FLAVOR}
    # Is this RPM-postinstall, potentially relocated?
    if [[ -z "$RPM_INSTALL_PREFIX" ]]; 
    then
	cp ${PREFIX}/${FLAVOR}/${VERSION}/module /etc/modulefiles/${FLAVOR}/${VERSION}
    else
	if [ -e ${RPM_INSTALL_PREFIX}/${FLAVOR}/${VERSION}/module ];
	then
	    sed -i.bak s+/usr/local+${RPM_INSTALL_PREFIX}+g ${RPM_INSTALL_PREFIX}/${FLAVOR}/${VERSION}/module
	    cp ${RPM_INSTALL_PREFIX}/${FLAVOR}/${VERSION}/module /etc/modulefiles/${FLAVOR}/${VERSION}
	fi
	if [ ${RPM_INSTALL_PREFIX} == /usr/local ];
	then
	    ln -sf ${RPM_INSTALL_PREFIX}/${FLAVOR}/${VERSION}/bin/* /usr/local/bin/
	fi
    fi
fi
# Try to figure out if this is a Debian package, a Mac OS X bundle or a generic unix...
if [[ ${PREFIX} = /usr/share* ]]; 
then
    # Looks like a Debian package - should really be handled via update-alternatives...
    BINTARGET="/usr/bin"
    APPTARGET="/usr/share/applications"
    LOGOTARGET="/usr/share/pixmaps"
    checklinks
elif [[ ${PREFIX} = /Applications* ]]
then
    # Looks like a Mac - dump links in /usr/bin
    BINTARGET="/usr/local/bin"
    APPTARGET="none"
    LOGOTARGET="none"
    # Also drop a link to the mccode "system folder" as it may otherwise be hard to find for "expert users"
    mkdir -p /usr/local/${FLAVOR}
    # - Should not be done if called from the 'app bundle' installer - and only once
    if [[ ${PREFIX} = */Contents/Resources ]]; then
	if [ ! -h /usr/local/${FLAVOR}/${VERSION} ]; then
	    ln -sf ${PREFIX}/${FLAVOR}/${VERSION} /usr/local/${FLAVOR}/${VERSION}
	fi
    fi
    checklinks
else
    # OK - nothing clever then
    BINTARGET=${PREFIX}/bin
    APPTARGET="/usr/share/applications"
    LOGOTARGET="/usr/share/pixmaps"
    checklinks
fi
if [ -d ${BINTARGET} ];
then
    cd ${BINTARGET}
    ln -sf ${PREFIX}/${FLAVOR}/${VERSION}/bin/* .
    ln -sf ${PREFIX}/${FLAVOR}/${VERSION}/environment ${FLAVOR}-${VERSION}-environment
else
    echo "Sorry, your ${BINTARGET} folder does not exist, dropping link creation"
fi
if [ -d ${APPTARGET} ];
then
    cd ${APPTARGET}
    ln -sf ${PREFIX}/${FLAVOR}/${VERSION}/launchers/*.desktop .
else
    echo "Sorry, your ${APPTARGET} folder does not exist, dropping link creation"
fi
if [ -d ${LOGOTARGET} ];
then
    cd ${LOGOTARGET}
    ln -sf ${PREFIX}/${FLAVOR}/${VERSION}/launchers/*.png .
else
    echo "Sorry, your ${LOGOTARGET} folder does not exist, dropping link creation"
fi

# Check if mcdoc is installed and if it needs to run
if [ -x ${PREFIX}/${FLAVOR}/${VERSION}/bin/${MC}doc ] && \
    [ -d ${PREFIX}/${FLAVOR}/${VERSION}/examples ]; then
    ${PREFIX}/${FLAVOR}/${VERSION}/bin/${MC}doc --text &>/dev/null
fi
