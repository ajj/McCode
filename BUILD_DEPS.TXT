This document lists build dependencies and explains use of the ./build_* scripts:

* Debian packages for 32bit and 64bit systems. Input parameters - 1) release "name", i.e. 2.1
build_debs_mcstas <release name>
build_debs_mcxtrace <release name>
Dependencies:
cmake cpack texlive gcc flex bison build-essentials etoolbox poppler-utils texlive-latex-extra (Check on clean system if this is enough!!)
Configuration - dpkg-reconfigure dash, select not to use dash as /bin/sh



* RedHat packages for 32bit and 64bit systems. Input parameters - 1) release "name", i.e. 2.1
build_rpms_mcstas <release name>
build_rpms_mcxtrace <release name>
Dependencies:
cmake cpack texlive texlive-imakeidx texlive-biblatex texlive-idxlayout gcc flex bison libc6-dev etoolbox (Check on clean system if this is enough!!)
Configuration - dpkg-reconfigure dash, select not to use dash as /bin/sh


* "Generic Unix" == Linux 32bit and 64bit, tgz packages. Input parameters - 1) release "name", i.e. 2.1
build_src_bin_mcstas <release name>
build_src_bin_mcxtrace
Dependencies:
cmake cpack texlive latexmk bibtex gcc flex bison libc6-dev etoolbox (Check on clean system if this is enough!!)
Configuration - dpkg-reconfigure dash, select not to use dash as /bin/sh



* Mac OS X packages for 64bit systems. Input parameters - 1) release "name", i.e. 2.1 2) flag to indicate if we are building a 'meta' package
build_macos_L-ML_mcstas  <release name> <meta>   / Lion and Mountain Lion
build_macos_L-ML_mcxtrace  <release name> <meta>   / Lion and Mountain Lion
build_macos_Maverics_mcstas  <release name> <meta>   / Mavericks
build_macos_Maverics_mcxtrace  <release name> <meta>   / Mavericks
build_macos_SL_mcstas  <release name> <meta>   / Snow Leopard
build_macos_SL_mcxtrace  <release name> <meta>   / Snow Leopard
Dependencies:
cmake cpack texlive/MacTeX Xcode with commandline tools PackageMaker.app  (Check on clean system if this is enough!!)
!! If need for any MacPorts / Fink / Brew software on the build machine - please add to END OF THE PATH variable rather than front... !!


* Windows packages for 32bit (and 64bit - running the 32bit version) systems. Input parameters - 1) release "name", i.e. 2.1 2) flag to indicate if we are building a 'meta' package. Built on Linux!!
build_windows_mcstas  <release name> <meta> 
build_windows_mcxtrace  <release name> <meta> 
Dependencies:

(run dpkg --add-architecture i386)
cmake cpack nsis texlive latexmk bibtex mingw-w64 flex bison libc6-dev wine-bin:i386 (Check on clean system if this is enough!!)

To build the windows 'metapackage' from Linux, you need to install wine:i386 and inno setup (within wine), following the below instructions.

IMPORTANT: The i386 suffix for the wine package is important as the inno setup nbinary will be installed in a wrong location otherwise...

- https://katastrophos.net/andre/blog/2009/03/16/setting-up-the-inno-setup-compiler-on-debian/

( Along the lines of:
  	• mkdir /tmp/innosetup  
	• cd /tmp/innosetup  
	• wget http://files.jrsoftware.org/ispack/ispack-5.2.3.exe  
	• wine ./ispack-5.2.3.exe
)
